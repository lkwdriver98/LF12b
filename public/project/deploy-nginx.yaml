apiVersion: v1
kind: Namespace
metadata:
  name: web
  labels:
    name: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deploy
  namespace: web
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101      # nginx (alpine) user
        fsGroup: 101
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
        readinessProbe:
          httpGet: { path: /, port: http }
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet: { path: /, port: http }
          initialDelaySeconds: 10
          periodSeconds: 20
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "250m"
            memory: "256Mi"
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
          readOnly: true
      volumes:
      - name: html
        configMap:
          name: nginx-index
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-index
  namespace: web
data:
  index.html: |
    <!doctype html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>TechFlair – NGINX</title>
      <style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Inter,Arial;margin:2rem} .ok{color:#16a34a}</style>
    </head>
    <body>
      <h1 class="ok">NGINX läuft im MicroK8s‑Cluster ✅</h1>
      <p>Bereitgestellt via Deployment (2 Replikas), Service und Ingress.</p>
    </body>
    </html>
